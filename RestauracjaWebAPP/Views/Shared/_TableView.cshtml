@model RestauracjaWebAPP.Models.Table

<h2>@Model.Name</h2>
@{
    if (Model.CurrentOrder.Dishes.Count > 0 || !Model.CurrentOrder.Closed)
    {
        <table id="orderTable">
            <tbody>
                <tr>
                    <td class="boldText">Numer dania</td>
                    <td class="boldText">Nazwa dania</td>
                    <td class="boldText">Zamówione ilość</td>
                    <td class="boldText">Cena za 1 porcję</td>
                    <td class="boldText">Cena za całość</td>
                    <td class="boldText" id="removeColumn">Usuń</td>
                </tr>

                @for (int a = 0; a < Model.CurrentOrder.Dishes.Count; a++)
                {
                    var dish = Model.CurrentOrder.Dishes[a];
                    var dishId = dish.DishObject.Id;
                    <tr>
                        <td>@(a + 1)</td>
                        <td>@dish.DishObject.Name</td>
                        <td style="position:relative">
                            <input id="dish_@dishId" class="tableInput" type="number" min="1" value="@dish.Quantity" onchange="updateExistingDish(this)">
                        </td>
                        <td id="dishPrice_@dishId">@(dish.DishObject.Price)zł</td>
                        <td id="dishTotalPrice_@dishId">@(dish.DishObject.Price * dish.Quantity)zł</td>
                        <td style="position: relative" id="removeColumn">
                            <button id="removeDish_@dishId" class="removeButton" onclick="removeDish(this)">Usuń</button>
                        </td>
                    </tr>
                }

                <tr id="controlsRow">
                    <td colspan="2">
                        <select id="dishes" onchange="updateDishPrice()"/>
                    </td>
                    <td style="position: relative">
                        <input id="newDishQuantity" class="tableInput" type="number" min="1" value="1" onchange="updateDishPrice()">
                    </td>
                    <td id="newDishPrice"></td>
                    <td id="newDishPriceTotal"></td>
                    <td style="position: relative">
                        <button id="addNewDishButton" class="confirmButton" onclick="addNewDish()">Dodaj</button>
                    </td>
                </tr>

                <tr style="height: 30px">
                    <td colspan="3" style="position:relative">
                        <button id="removeOrderButton" class="removeButton" onclick="removeOrder(this)">Usuń zamówienie</button>
                    </td>
                    <td colspan="3" style="position:relative">
                        <button id="confirmOrderButton" class="confirmButton" onclick="showSummary()">Zapłać</button>
                    </td>
                </tr>
            </tbody>
        </table>
    }
    else
    {
        <div>Brak zamówień dla tego stolika</div>
        <button id="createOrder_@Model.Id" onclick="createOrder()">Utwórz nowe zamówienie</button>
    }

}

<script type="text/javascript">

    async function showSummary() {

        if (@Model.CurrentOrder.Dishes.Count < 1)
            return;

        var tip = await getTip();
        var sum = await getSum();

        var fields = [@(Model.CurrentOrder.Dishes.Count+1), "Napiwek 5%", "-", "-", tip + "zł", "-"];
        var tipCellList = Array(fields);
        for (var a = 0; a < fields.length; a++)
            tipCellList[a] = $("<td/>", { html: fields[a] });

        $("<tr/>", { id: "tipRow" }).insertBefore($("#controlsRow"));
        for (var a = 0; a < 6; a++)
            $("#tipRow").append(tipCellList[a]);

        $("<tr/>", { id: "summaryRow" }).insertAfter($("#tipRow"));
        $("#summaryRow").append($("<td/>", { html: "Podsumowanie: ", colspan: 4, class: "rightBoldRow" }));
        $("#summaryRow").append($("<td/>", { html: sum + "zł", colspan: 2, class: "leftBoldRow"}));


        $("button").attr("disabled", true);
        $("input").attr("disabled", true);
        $("#dishes").attr("disabled", true);
        $("#orderTable button").attr("class", "disabledButton");
        // Activate and change back remove order button. Now it's function is to cancel order payment
        $("#removeOrderButton").attr("onclick", "hideSummary()");
        $("#removeOrderButton").attr("class", "removeButton");
        $("#removeOrderButton").attr("disabled", false);
        $("#removeOrderButton").html("Anuluj");
        // Activate and change back confirm order button. Now it's function is to close order
        $("#confirmOrderButton").attr("onclick", "closeOrder()");
        $("#confirmOrderButton").attr("class", "confirmButton");
        $("#confirmOrderButton").attr("disabled", false);
        $("#confirmOrderButton").html("Potwierdź płatność");
        // Hide control row
        $("#controlsRow").hide();
    }

    function getTip() {
        return $.ajax({
            type: "GET",
            url: "Table/GetTip/"+@(Model.Id),
            contentType: "application/json; charset=utf-8",
        });
    }

    function getDishPrice(dishId) {
        return $.ajax({
            type: "GET",
            url: "/GetDishPrice/"+dishId,
            contentType: "application/json; charset=utf-8",
        })
    }

    function getDishQuantity(dishId) {
        var body = {};
        body.dishId = dishId;
        body.tableId = @(Model.Id);

        return $.ajax({
            type: "POST",
            url: "/GetTableDishQuantity",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(body)
        });
    }

    function getDishes() {
        if ($("#orderTable").children().length == 0)
            return;

        $.ajax({
            type: "GET",
            url: "/GetDishes",
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                if (result.success) {
                    fillDishList(result.message);
                }
                else
                    alert("Błąd podczas pobierania dostępnych dań! Treść błędu: " + result.message);
            }
        })
    }

    function getSum() {
        return $.ajax({
            type: "GET",
            url: "Table/GetDishPrice/"+@Model.Id,
            contentType: "application/json; charset=utf-8"
        })
    }

    function createRow(fields) {
        var rowCellsList = new Array(fields.length);
        for (var a = 0; a < fields.length; a++)
            rowCellsList[a] = $("<td/>", { html: fields[a] });

        return rowCellsList;
    }

    function createOrder() {
        var body = {};
        body.tableId = @(Model.Id);

        $.ajax({
            type: "POST",
            url: "/Table/CreateOrder",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(body),
            success: function (result) {
                if (result.success) {
                    window.location.href = "/"+@Model.Id;
                }
                else
                    alert("Błąd podczas usuwania zamówienia! Treść błędu: " + result.message);
            }
        })
    }

    async function addNewDish() {
        var id = $("#dishes").children("option:selected").val();
        var quantity = $("#newDishQuantity").val();

        var oryginalDishQuantity = await getDishQuantity(id);
        updateQuantity(id, Number(oryginalDishQuantity) + Number(quantity));
        window.location.href = "/"+@Model.Id;
    }

    function updateExistingDish(sender) {
        var id = sender.id.substring(sender.id.indexOf("_") + 1);
        var quantity = sender.value;
        if (quantity < 1) {
            sender.value = 1;
        }

        updateQuantity(id, quantity);
    }

    function updateQuantity(id, quantity) {
        var totalPrice = 0;
        if (quantity < 1)
            return;

        var body = {};
        body.tableId = @Model.Id;
        body.dishId = id;
        body.quantity = quantity;

        $.ajax({
            type: "POST",
            url: "/Table/UpdateDish",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(body),
            success: function (result) {
                if (result.success) {
                    totalPrice = result.message;
                    $("#dishTotalPrice_" + id).html(totalPrice + "zł");
                    $("#dish_" + id).val(quantity);
                }
                else
                    alert("Błąd podczas aktualizacji zamówienia! Treść błędu: " + result.message);
            }
        })
    }

    async function updateDishPrice() {
        var selectedId = $("#dishes").children("option:selected").val();
        const price = await getDishPrice(selectedId);
        var quantity = $("#newDishQuantity").val();

        if (quantity == null)
            quantity = 1;

        if (quantity < 1) {
            $("#newDishQuantity").val(1);
            return;
        }

        $("#newDishPrice").html(price + "zł");
        $("#newDishPriceTotal").html(price * quantity + "zł");
    }

    function fillDishList(list) {

        $("#dishes").children().remove();
        for (var a = 0; a < list.length; a++) {
            var element = { val: a, text: list[a].Name };
            $("#dishes").append(new Option(element.text, element.val));
        }
        updateDishPrice();
    }

    function closeOrder() {
        var body = {};
        body.tableId = @(Model.Id);

        if (confirm("Czy na pewno chcesz zamknąć zamówienie?")) {
            $.ajax({
                type: "POST",
                url: "/Table/CloseOrder",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(body),
                success: function (result) {
                    if (result.success) {
                        window.location.href = "/"+@Model.Id;
                    }
                    else
                        alert("Błąd podczas usuwania zamówienia! Treść błędu: " + result.message);
                }
            })
        }
    }

    function hideSummary() {
        $("button").attr("disabled", false);
        $("input").attr("disabled", false);
        $("#dishes").attr("disabled", false);
        $("#orderTable button").attr("class", "removeButton");
        $("#addNewDishButton").attr("class", "confirmButton");

        $("#tipRow").remove();
        $("#summaryRow").remove();

        // Change ramove order button. Now it's function is to remove order order
        $("#removeOrderButton").attr("onclick", "removeOrder()");
        $("#removeOrderButton").attr("class", "removeButton");
        $("#removeOrderButton").html("Usuń zamówienie");
        // Change confirm order button. Now it's function is initiate payment
        $("#confirmOrderButton").attr("onclick", "showSummary()");
        $("#confirmOrderButton").attr("class", "confirmButton");
        $("#confirmOrderButton").html("Zapłać");
        // Show control row again
        $("#controlsRow").show();
    }

    function removeDish(sender) {
        var id = sender.id.substring(sender.id.indexOf("_") + 1);

        var body = {};
        body.tableId = @Model.Id;
        body.dishId = id;

        $.ajax({
            type: "POST",
            url: "/Table/RemoveDish",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(body),
            success: function (result) {
                if (result.success) {
                    window.location.href = "/"+@Model.Id;
                }
                else
                    alert("Błąd podczas usuwania dania! Treść błędu: " + result.message);
            }
        })
    }

    function removeOrder() {
        var body = {};
        body.tableId = @(Model.Id);

        if (confirm("Czy na pewno chcesz usunąć zamówienie?")) {
            $.ajax({
                type: "POST",
                url: "/Table/RemoveOrder",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(body),
                success: function () {
                    window.location.href = "/" +@Model.Id;
                }
            });
        }
    }

</script>