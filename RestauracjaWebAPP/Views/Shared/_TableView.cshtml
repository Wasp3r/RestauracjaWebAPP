@model RestauracjaWebAPP.Models.Table

<h2>@Model.Name</h2>
@{
    if (Model.CurrentOrder != null)
    {
        <table>
            <tbody>
                <tr>
                    <td class="boldText">Numer dania</td>
                    <td class="boldText">Nazwa dania</td>
                    <td class="boldText">Zamówione ilość</td>
                    <td class="boldText">Cena za 1 porcję</td>
                    <td class="boldText">Cena za całość</td>
                    <td class="boldText">Usuń</td>
                </tr>

                @for (int a = 0; a < Model.CurrentOrder.Dishes.Count; a++)
                {
                    var dish = Model.CurrentOrder.Dishes[a];
                    <tr>
                        <td>@(a + 1)</td>
                        <td>@dish.DishObject.Name</td>
                        <td style="position:relative">
                            <input id="dish_@a" class="tableInput" type="number" min="0" value="@dish.Quantity" onchange="updateExistingDish(this)">
                        </td>
                        <td id="dishPrice_@a">@(dish.DishObject.Price)zł</td>
                        <td id="dishTotalPrice_@a">@(dish.DishObject.Price * dish.Quantity)zł</td>
                        <td style="position: relative">
                            <button id="removeDish_@a" class="removeButton" onclick="removeDish(this)">Usuń</button>
                        </td>
                    </tr>
                }

                <tr>
                    <td colspan="2">
                        <select id="dishes" onchange="updateDishPrice()"/>
                    </td>
                    <td style="position: relative">
                        <input id="newDishQuantity" class="tableInput" type="number" min="1" value="1" onchange="updateDishPrice()">
                    </td>
                    <td id="newDishPrice"></td>
                    <td id="newDishPriceTotal"></td>
                    <td style="position: relative">
                        <button id="addNewDishButton" class="confirmButton" onclick="addNewDish()">Dodaj</button>
                    </td>
                </tr>

                <tr>
                    <td colspan="3" style="position:relative">
                        <button class="removeButton" onclick="removeOrder(this)">Usuń zamówienie</button>
                    </td>
                    <td colspan="3" style="position:relative">
                        <button class="confirmButton">Zapłać</button>
                    </td>
                </tr>
            </tbody>
        </table>
    }
    else
    {
        <div>Brak zamówień dla tego stolika</div>
        <button id="createOrder_@Model.Id" onclick="createOrder()">Utwórz nowe zamówienie</button>
    }

}

<script type="text/javascript">

    function updateExistingDish(sender) {
        var id = sender.id.substring(sender.id.indexOf("_") + 1);
        var quantity = sender.value;
        updateQuantity(id, quantity);
    }

    async function addNewDish() {
        var id = $("#dishes").children("option:selected").val();
        var quantity = $("#newDishQuantity").val();
        var oryginalDishQuantity = await getDishQuantity(id);

        alert("Actual: " + quantity + " Total: " + oryginalDishQuantity);

        updateQuantity(id, Number(oryginalDishQuantity) + Number(quantity));
    }

    function updateQuantity(id, quantity) {
        var totalPrice = 0;

        var body = {};
        body.tableId = @Model.Id;
        body.dishId = id;
        body.quantity = quantity;

        $.ajax({
            type: "POST",
            url: "/Table/UpdateDish",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(body),
            success: function (result) {
                if (result.success) {
                    totalPrice = result.message;
                    $("#dishTotalPrice_" + id).html(totalPrice + "zł");
                    $("#dish_" + id).val(quantity);
                }
                else
                    alert("Błąd podczas aktualizacji zamówienia! Treść błędu: " + result.message);
            }
        })
    }

    function removeDish(sender) {
        var id = sender.id.substring(sender.id.indexOf("_") + 1);
        var dishQuantity = $("#dish_" + id);
        dishQuantity.css("background-color", "#cd5c5c");
    }

    function removeOrder() {
        var body = {};
        body.tableId = @(Model.Id);

        if (confirm("Czy na pewno chcesz usunąć zamówienie?")) {
            $.ajax({
                type: "POST",
                url: "/Table/RemoveOrder",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(body),
                success: function (result) {
                    if (result.success) {
                        location.reload();
                    }
                    else
                        alert("Błąd podczas usuwania zamówienia! Treść błędu: " + result.message);
                }
            })
        }
    }

    function createOrder() {
        var body = {};
        body.tableId = @(Model.Id);

        $.ajax({
            type: "POST",
            url: "/Table/CreateOrder",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(body),
            success: function (result) {
                if (result.success) {
                    location.reload();
                }
                else
                    alert("Błąd podczas usuwania zamówienia! Treść błędu: " + result.message);
            }
        })
    }

    function getDishes() {
        $.ajax({
            type: "GET",
            url: "/GetDishes",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: "",
            success: function (result) {
                if (result.success) {
                    fillDishList(result.message);
                }
                else
                    alert("Błąd podczas pobierania dostępnych dań! Treść błędu: " + result.message);
            }
        })
    }

    function fillDishList(list) {
        for (var a = 0; a < list.length; a++) {
            var element = { val: a, text: list[a].Name };
            $("#dishes").append($("<option>").attr('value', element.val).text(element.text));
        }

        updateDishPrice();
    }

    async function updateDishPrice() {
        var selectedId = $("#dishes").children("option:selected").val();
        const price = await getDishPrice(selectedId);
        var quantity = $("#newDishQuantity").val();
        if (quantity == null)
            quantity = 0;

        $("#newDishPrice").html(price + "zł");
        $("#newDishPriceTotal").html(price * quantity + "zł");
    }

    function getDishPrice(dishId) {
        var body = {};
        body.dishId = dishId;

        return $.ajax({
            type: "POST",
            url: "/GetDishPrice",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(body)
        })
    }

    function getDishQuantity(dishId) {
        var body = {};
        body.dishId = dishId;
        body.tableId = @(Model.Id);

        return $.ajax({
            type: "POST",
            url: "/GetTableDishQuantity",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: JSON.stringify(body)
        })
    }

</script>